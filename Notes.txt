How to run a file inside the terminal (cmd); ---> node <filename>

Modules
- a module is an encapsulated and reusable chunk of code that has its own context
- in Node.js, each file is treated as a seperate module

Types of Modules
1. Local modules - Modules that we create in out application
2. Build-in modules - Modules that Node.js ships with out of the box
3. Third party modules - Modules written by other developers that we can use in out application

CommonJS is a standard that staes how a module should be structured and shared
Node.js adopted CommonJS when it started out and is what you will see in the code bases

Local Modules Summary
- In node.js, each file is a module that is isolated by default
- To load a module into another file, we use the require function
- When index.js is executed, the code in the module is also executed
- If the file we are requiring is a javascript  file, we can skip specifying the extension and node.js will infer it on out behalf 

Immediately Invoked Function Expression (IIFE) in Node.js
- Before a module's code is executed, Node.js will wrap if with a function wrapper that provides module scope
- This saves us from having to worry about conflicting variables or functions
- There is proper encapsulation and reusability is unaffected
SAMPLE CODE: 
    (function () {
        // Module code actually lives in here
    })();

Module Scope Summary
- Each loaded module in Node.js is wrapped with an an IIFE that provides private scoping of code
- IIFE allows you to repeat variable or function names without any conflicts

Module Wrapper
- Every module in node.js gets wrapped in an IIFE before being loaded
- IIFE helps keep top-level variables scroped to the module rather that the global object
- The IIFE that wraps every module contanins 5 parameters which are pretty important for the functioning of a module

final code with parameters. 5 in total: 
(function (exports, require, module, __filename, dirname) {
    // Module code actually lives in here
})();